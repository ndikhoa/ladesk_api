#!/usr/bin/env python3
"""
Script test ƒë·ªÉ ki·ªÉm tra t√≠nh nƒÉng t·∫°o contact v√† ticket v·ªõi th√¥ng tin kh√°ch h√†ng
"""

import requests
import json
import time
from datetime import datetime

# C·∫•u h√¨nh
API_BASE_URL = "http://localhost:3000"

def test_health():
    """Test health endpoint"""
    print("=== Testing Health Endpoint ===")
    try:
        response = requests.get(f"{API_BASE_URL}/health")
        print(f"Status: {response.status_code}")
        print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        return response.status_code == 200
    except Exception as e:
        print(f"Error: {e}")
        return False

def test_create_contact():
    """Test t·∫°o contact v√† ticket"""
    print("\n=== Testing Create Contact ===")
    
    # Test data
    test_data = {
        "customer_name": "Nguy·ªÖn VƒÉn Test",
        "customer_email": "nguyenvantest@facebook.com",
        "facebook_id": "123456789",
        "message": "Xin ch√†o, t√¥i c·∫ßn h·ªó tr·ª£ v·ªÅ s·∫£n ph·∫©m c·ªßa b·∫°n. C√≥ th·ªÉ t∆∞ v·∫•n th√™m kh√¥ng?",
        "subject": "Y√™u c·∫ßu t∆∞ v·∫•n s·∫£n ph·∫©m"
    }
    
    try:
        response = requests.post(
            f"{API_BASE_URL}/test/create-contact",
            json=test_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"Status: {response.status_code}")
        print(f"Request Data: {json.dumps(test_data, indent=2, ensure_ascii=False)}")
        print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        return response.status_code == 200
    except Exception as e:
        print(f"Error: {e}")
        return False

def test_webhook_cloud():
    """Test webhook t·ª´ Ladesk Cloud"""
    print("\n=== Testing Cloud Webhook ===")
    
    # Test data m√¥ ph·ªèng webhook t·ª´ Cloud
    webhook_data = {
        "conversation_id": f"test_conv_{int(time.time())}",
        "message": "Xin ch√†o, t√¥i c√≥ c√¢u h·ªèi v·ªÅ d·ªãch v·ª• c·ªßa b·∫°n",
        "customer_info": {
            "name": "Tr·∫ßn Th·ªã Kh√°ch",
            "email": "tranthikhach@facebook.com",
            "contact_id": "987654321",
            "subject": "H·ªèi v·ªÅ d·ªãch v·ª•"
        },
        "event_type": "ticket_created"
    }
    
    try:
        response = requests.post(
            f"{API_BASE_URL}/webhook/ladesk-cloud",
            json=webhook_data,
            headers={'Content-Type': 'application/json'}
        )
        
        print(f"Status: {response.status_code}")
        print(f"Webhook Data: {json.dumps(webhook_data, indent=2, ensure_ascii=False)}")
        print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        return response.status_code == 200
    except Exception as e:
        print(f"Error: {e}")
        return False

def test_multiple_contacts():
    """Test t·∫°o nhi·ªÅu contact kh√°c nhau"""
    print("\n=== Testing Multiple Contacts ===")
    
    customers = [
        {
            "name": "L√™ VƒÉn A",
            "email": "levana@facebook.com",
            "facebook_id": "111111111",
            "message": "T√¥i mu·ªën mua s·∫£n ph·∫©m A"
        },
        {
            "name": "Ph·∫°m Th·ªã B",
            "email": "phamthib@facebook.com", 
            "facebook_id": "222222222",
            "message": "C√≥ th·ªÉ giao h√†ng t·∫≠n n∆°i kh√¥ng?"
        },
        {
            "name": "Ho√†ng VƒÉn C",
            "email": "hoangvanc@facebook.com",
            "facebook_id": "333333333", 
            "message": "Gi√° s·∫£n ph·∫©m c√≥ gi·∫£m kh√¥ng?"
        }
    ]
    
    success_count = 0
    
    for i, customer in enumerate(customers, 1):
        print(f"\n--- Test Customer {i}: {customer['name']} ---")
        
        test_data = {
            "customer_name": customer["name"],
            "customer_email": customer["email"],
            "facebook_id": customer["facebook_id"],
            "message": customer["message"],
            "subject": f"Y√™u c·∫ßu t·ª´ {customer['name']}"
        }
        
        try:
            response = requests.post(
                f"{API_BASE_URL}/test/create-contact",
                json=test_data,
                headers={'Content-Type': 'application/json'}
            )
            
            print(f"Status: {response.status_code}")
            if response.status_code == 200:
                result = response.json()
                print(f"Contact ID: {result.get('contact_id', 'N/A')}")
                print(f"Customer Email: {result.get('customer_email', 'N/A')}")
                success_count += 1
            else:
                print(f"Error: {response.text}")
                
        except Exception as e:
            print(f"Error: {e}")
        
        # Delay gi·ªØa c√°c request
        time.sleep(1)
    
    print(f"\nSuccess: {success_count}/{len(customers)} customers")
    return success_count == len(customers)

def main():
    """Main test function"""
    print("üöÄ Starting Ladesk Integration API Tests")
    print(f"API Base URL: {API_BASE_URL}")
    print(f"Test Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # Test health
    health_ok = test_health()
    if not health_ok:
        print("‚ùå Health check failed. Please check if the API is running.")
        return
    
    # Test create contact
    contact_ok = test_create_contact()
    
    # Test webhook
    webhook_ok = test_webhook_cloud()
    
    # Test multiple contacts
    multiple_ok = test_multiple_contacts()
    
    # Summary
    print("\n" + "="*50)
    print("üìä TEST SUMMARY")
    print("="*50)
    print(f"Health Check: {'‚úÖ PASS' if health_ok else '‚ùå FAIL'}")
    print(f"Create Contact: {'‚úÖ PASS' if contact_ok else '‚ùå FAIL'}")
    print(f"Cloud Webhook: {'‚úÖ PASS' if webhook_ok else '‚ùå FAIL'}")
    print(f"Multiple Contacts: {'‚úÖ PASS' if multiple_ok else '‚ùå FAIL'}")
    
    if all([health_ok, contact_ok, webhook_ok, multiple_ok]):
        print("\nüéâ All tests passed!")
    else:
        print("\n‚ö†Ô∏è  Some tests failed. Please check the logs.")

if __name__ == "__main__":
    main() 